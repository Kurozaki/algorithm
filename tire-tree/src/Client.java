import java.util.Scanner;

/**
 * Created by YotWei on 2018/9/9.
 */
public class Client {

    private static String[] words = new String[]{
            "assassin",
            "arc",
            "archer",
            "abandon",
            "angel",
            "apply",
            "apple",
            "absolute",
            "absolutely",
            "animate",
            "banana",
            "burn",
            "build",
            "buffer",
            "byte",
            "bush",
            "business",
            "bus",
            "cat",
            "car",
            "canada",
            "candy",
            "cut",
            "come",
            "dynamic",
            "distinct",
            "distance",
            "during",
            "death",
            "dead",
            "deadline",
            "excited",
            "excellent",
            "extra",
            "equal",
            "equation",
            "edit",
            "editor",
            "education",
            "effect",
            "error",
            "funny",
            "fruit",
            "frustrate",
            "function",
            "fate",
            "fade",
            "fail",
            "faith",
            "filter",
            "fill",
            "fly",
            "fight",
            "forget",
            "forgive",
            "game",
            "go",
            "god",
            "gather",
            "generate",
            "general",
            "hurry",
            "hook",
            "home",
            "homework",
            "homepage",
            "horse",
            "house",
            "human",
            "humanity",
            "hyper",
            "hypertext",
            "height",
            "high",
            "hold",
            "holly",
            "instruct",
            "interesting",
            "interested",
            "inner",
            "inbound",
            "inactive",
            "integer",
            "illegal",
            "implement",
            "impress",
            "impression",
            "impressive",
            "important",
            "importance",
            "information",
            "introduce",
            "introduction",
            "increment",
            "increase",
            "ignite",
            "ill",
            "illness",
            "java",
            "jeep",
            "json",
            "jackson",
            "jet",
            "king",
            "keep",
            "kitchen",
            "knock",
            "legal",
            "lua",
            "lolita",
            "lambda",
            "line",
            "lying",
            "lie",
            "lay",
            "lazy",
            "layer",
            "likely",
            "like",
            "month",
            "mother",
            "moment",
            "million",
            "milky",
            "merry",
            "mess",
            "message",
            "massive",
            "mass",
            "movie",
            "move",
            "movable",
            "not",
            "night",
            "negative",
            "noodle",
            "nutrition",
            "nut",
            "netty",
            "network",
            "net",
            "option",
            "observer",
            "obtain",
            "occupy",
            "occupied",
            "okay",
            "ongoing",
            "outer",
            "out",
            "outside",
            "outline",
            "oval",
            "permit",
            "pass",
            "passport",
            "password",
            "pascal",
            "path",
            "position",
            "post",
            "postage",
            "postpone",
            "postcard",
            "pop",
            "popular",
            "popularity",
            "population",
            "pollution",
            "poll",
            "project",
            "projection",
            "projected",
            "protect",
            "protected",
            "protection",
            "prepare",
            "previous",
            "private",
            "primary",
            "priority",
            "property",
            "python",
            "potato",
            "public",
            "race",
            "raise",
            "react",
            "reactive",
            "rebuild",
            "reduce",
            "refuse",
            "reject",
            "range",
            "remove",
            "repeat",
            "repeated",
            "repeatable",
            "report",
            "reporter",
            "rare",
            "restart",
            "rise",
            "rich",
            "rock",
            "rocky",
            "rocking",
            "roll",
            "rollback",
            "rule",
            "ruler",
            "tangent",
            "teach",
            "teacher",
            "touch",
            "turing",
            "transfer",
            "transact",
            "transaction",
            "train",
            "training",
            "true",
            "trust",
            "trusty",
            "truth",
            "truly",
            "toast",
            "tiny",
            "social",
            "spring",
            "spy",
            "super",
            "support",
            "solve",
            "solution",
            "solute",
            "similar",
            "similarity",
            "small",
            "skin",
            "sky",
            "soon",
            "unity",
            "unit",
            "util",
            "until",
            "ubuntu",
            "ugly",
            "unix",
            "visit",
            "visitor",
            "visited",
            "visual",
            "virtual",
            "vertical",
            "wrong",
            "yummy",
            "zero",
            "zone",
            "zoom"
    };

    public static void main(String[] args) {
        TireTree tireTree = new TireTree();
        for (String word : words) {
            tireTree.insert(word);
        }

        long start, end;
        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()) {
            String word = sc.next();
            start = System.currentTimeMillis();

            System.out.printf("Result set = %s\n", tireTree.search(word));

            end = System.currentTimeMillis();
            System.out.println("Search cost: "+(end - start) + "ms");
        }

    }
}
